# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
      
    - name: Run golangci-lint
  # You may pin to the exact commit or the version.
  # uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5
  uses: golangci/golangci-lint-action@v3.4.0
  with:
    # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
    version: # optional
    # golangci-lint command line arguments
    args: # optional, default is 
    # golangci-lint working directory, default is project root
    working-directory: # optional
    # the token is used for fetching patch of a pull request to show only new issues
    github-token: # optional, default is ${{ github.token }}
    # if set to true and the action runs on a pull request - the action outputs only newly found issues
    only-new-issues: # optional
    # if set to true then the all caching functionality will be complete disabled,
takes precedence over all other caching options.

    skip-cache: # optional
    # if set to true then the action doesn't cache or restore ~/go/pkg.
    skip-pkg-cache: # optional
    # if set to true then the action doesn't cache or restore ~/.cache/go-build.
    skip-build-cache: # optional
